/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { GameGateway, GameGatewayInterface } from "../GameGateway";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roomNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "gameType",
        type: "uint8",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roomNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "GameEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roomNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "GameJoined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roomNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "LeaderboardUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserSignedUp",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_instance",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "gameType",
        type: "uint8",
      },
    ],
    name: "createGame",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roomNumber",
        type: "uint256",
      },
    ],
    name: "endGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "games",
    outputs: [
      {
        internalType: "contract Game",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roomNumber",
        type: "uint256",
      },
    ],
    name: "getLeaderboardEntry",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timeTaken",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "roomNumber",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "gameType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GameGateway.LeaderboardEntry",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerStats",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "playerAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalGamesPlayed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalGamesWon",
            type: "uint256",
          },
        ],
        internalType: "struct GameGateway.Player",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasGameStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roomNumber",
        type: "uint256",
      },
    ],
    name: "joinGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "leaderboard",
    outputs: [
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timeTaken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roomNumber",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "gameType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalGamesPlayed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalGamesWon",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "signUpUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRooms",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userSignUp",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061176e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063aec1e07711610071578063aec1e077146101b3578063af5537fa146101e3578063bf36839914610201578063d0399bb814610235578063e2eb41ff14610251578063efaa55a014610283576100b4565b8063117a5b90146100b9578063242bb9fc146100e95780634898a18a146101195780634fd66eae146101495780635e007f9e14610179578063a511e467146101a9575b600080fd5b6100d360048036038101906100ce9190611041565b61029f565b6040516100e091906110ed565b60405180910390f35b61010360048036038101906100fe9190611041565b6102d2565b60405161011091906111bc565b60405180910390f35b610133600480360381019061012e9190611203565b610390565b604051610140919061124b565b60405180910390f35b610163600480360381019061015e9190611203565b6103b0565b60405161017091906112a8565b60405180910390f35b610193600480360381019061018e91906112ef565b610473565b6040516101a0919061133e565b60405180910390f35b6101b16106c6565b005b6101cd60048036038101906101c89190611203565b6108c0565b6040516101da919061124b565b60405180910390f35b6101eb6108e0565b6040516101f8919061133e565b60405180910390f35b61021b60048036038101906102169190611041565b6108e6565b60405161022c959493929190611377565b60405180910390f35b61024f600480360381019061024a9190611041565b610949565b005b61026b60048036038101906102669190611203565b610d6e565b60405161027a939291906113ca565b60405180910390f35b61029d60048036038101906102989190611041565b610db8565b005b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102da610f87565b600560008381526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff1681526020016004820154815250509050919050565b60046020528060005260406000206000915054906101000a900460ff1681565b6103b8610fcf565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250509050919050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f89061145e565b60405180910390fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561058e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610585906114ca565b60405180910390fd5b6000806000815461059e90611519565b91905081905590506000849050806001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663727e63663386856040518463ffffffff1660e01b815260040161063a93929190611561565b600060405180830381600087803b15801561065457600080fd5b505af1158015610668573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff16827fdd0abcdffc76581d11646898ee4d7f269ca1e0c0b622d072d343100dad83ecb1866040516106b39190611598565b60405180910390a3819250505092915050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a906115ff565b60405180910390fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050503373ffffffffffffffffffffffffffffffffffffffff167f1075863f455b1ed07c8c394d3a38d3d228f2504ad3255236c4c28ee11b30606160405160405180910390a2565b60036020528060005260406000206000915054906101000a900460ff1681565b60005481565b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16908060040154905085565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a049061166b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663d52b3c1c336040518263ffffffff1660e01b8152600401610a46919061168b565b600060405180830381600087803b158015610a6057600080fd5b505af1158015610a74573d6000803e3d6000fd5b5050505060008060008373ffffffffffffffffffffffffffffffffffffffff16631b31abda866040518263ffffffff1660e01b8152600401610ab6919061133e565b606060405180830381865afa158015610ad3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af791906116e5565b9250925092506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806001016000815480929190610b5590611519565b9190505550806002016000815480929190610b6f90611519565b91905055506040518060a001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018781526020018360ff168152602001428152506005600088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff160217905550608082015181600401559050508373ffffffffffffffffffffffffffffffffffffffff16867f3d5fcd8fa3235aeb3897f25c8ea49989174981afcb01b9d03189d1056a16775b60405160405180910390a38373ffffffffffffffffffffffffffffffffffffffff16867fd495811d278679e90c40c5639e95bcfe0ee19e17bea57fa1fb1e129a69e763fe60405160405180910390a36000600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600087815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505050505050565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610e44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3b9061145e565b60405180910390fd5b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16632389a290336040518263ffffffff1660e01b8152600401610eb5919061168b565b600060405180830381600087803b158015610ecf57600080fd5b505af1158015610ee3573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff16827f45c4f9cbafe186141862608c493f28b823fde4c2142bedc3f5169961a73fdd2260405160405180910390a36001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600060ff168152602001600081525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b600080fd5b6000819050919050565b61101e8161100b565b811461102957600080fd5b50565b60008135905061103b81611015565b92915050565b60006020828403121561105757611056611006565b5b60006110658482850161102c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006110b36110ae6110a98461106e565b61108e565b61106e565b9050919050565b60006110c582611098565b9050919050565b60006110d7826110ba565b9050919050565b6110e7816110cc565b82525050565b600060208201905061110260008301846110de565b92915050565b60006111138261106e565b9050919050565b61112381611108565b82525050565b6111328161100b565b82525050565b600060ff82169050919050565b61114e81611138565b82525050565b60a08201600082015161116a600085018261111a565b50602082015161117d6020850182611129565b5060408201516111906040850182611129565b5060608201516111a36060850182611145565b5060808201516111b66080850182611129565b50505050565b600060a0820190506111d16000830184611154565b92915050565b6111e081611108565b81146111eb57600080fd5b50565b6000813590506111fd816111d7565b92915050565b60006020828403121561121957611218611006565b5b6000611227848285016111ee565b91505092915050565b60008115159050919050565b61124581611230565b82525050565b6000602082019050611260600083018461123c565b92915050565b60608201600082015161127c600085018261111a565b50602082015161128f6020850182611129565b5060408201516112a26040850182611129565b50505050565b60006060820190506112bd6000830184611266565b92915050565b6112cc81611138565b81146112d757600080fd5b50565b6000813590506112e9816112c3565b92915050565b6000806040838503121561130657611305611006565b5b6000611314858286016111ee565b9250506020611325858286016112da565b9150509250929050565b6113388161100b565b82525050565b6000602082019050611353600083018461132f565b92915050565b61136281611108565b82525050565b61137181611138565b82525050565b600060a08201905061138c6000830188611359565b611399602083018761132f565b6113a6604083018661132f565b6113b36060830185611368565b6113c0608083018461132f565b9695505050505050565b60006060820190506113df6000830186611359565b6113ec602083018561132f565b6113f9604083018461132f565b949350505050565b600082825260208201905092915050565b7f55736572206d757374207369676e207570206669727374000000000000000000600082015250565b6000611448601783611401565b915061145382611412565b602082019050919050565b600060208201905081810360008301526114778161143b565b9050919050565b7f47616d6520616c72656164792073746172746564000000000000000000000000600082015250565b60006114b4601483611401565b91506114bf8261147e565b602082019050919050565b600060208201905081810360008301526114e3816114a7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115248261100b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611556576115556114ea565b5b600182019050919050565b60006060820190506115766000830186611359565b6115836020830185611368565b611590604083018461132f565b949350505050565b60006020820190506115ad6000830184611368565b92915050565b7f5573657220616c7265616479207369676e656420757000000000000000000000600082015250565b60006115e9601683611401565b91506115f4826115b3565b602082019050919050565b60006020820190508181036000830152611618816115dc565b9050919050565b7f47616d65206e6f74207374617274656400000000000000000000000000000000600082015250565b6000611655601083611401565b91506116608261161f565b602082019050919050565b6000602082019050818103600083015261168481611648565b9050919050565b60006020820190506116a06000830184611359565b92915050565b6000815190506116b5816111d7565b92915050565b6000815190506116ca81611015565b92915050565b6000815190506116df816112c3565b92915050565b6000806000606084860312156116fe576116fd611006565b5b600061170c868287016116a6565b935050602061171d868287016116bb565b925050604061172e868287016116d0565b915050925092509256fea2646970667358221220a1a35dd0ab7681b9a8d59fbf88a5b09e3aee6d0238b7ee2ec3671ea8248f908164736f6c63430008110033";

type GameGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameGatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameGateway__factory extends ContractFactory {
  constructor(...args: GameGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GameGateway & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GameGateway__factory {
    return super.connect(runner) as GameGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameGatewayInterface {
    return new Interface(_abi) as GameGatewayInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GameGateway {
    return new Contract(address, _abi, runner) as unknown as GameGateway;
  }
}
